## Choice of algorithms:

# choice1:
   #Logistics Regression

# choice2:
   # NaiveBayes

# choice3:
   # Random Forest


 ---------------------------------------------------------------------------------------------

 ###1. #Logistics Regression

from pyspark.ml.classification import LogisticRegression
lr = LogisticRegression(maxIter=20, regParam=0.3, elasticNetParam=0,featuresCol="features", labelCol='is_electronic')
lr_model = lr.fit(traing)
pred1 = lr_model.transform(test)

pred1.show(5,)

#  +--------+------+--------+---------+---------+--------+--------+--------+--------+-------+------------------+--------------------+-------------+--------------------+--------------------+--------------------+----------+
#  |      D1|    D2|      D3|       D4|       D5|      D6|      D7|     D10|      A1|     A2|      MSD_TRACKID1|           GenreType|is_electronic|            features|       rawPrediction|         probability|prediction|
#  +--------+------+--------+---------+---------+--------+--------+--------+--------+-------+------------------+--------------------+-------------+--------------------+--------------------+--------------------+----------+
#  |1.261E-4|3351.0| 58100.0|  3.903E7|  6.797E8|1.183E10|8.452E11|4.467E15|7.093E-4| 5626.0|TRJNDIV128F426F03B|          Electronic|            1|[1.261E-4,3351.0,...|[-0.0267562714673...|[0.49331133116215...|       1.0|
#  |0.004715|3356.0| 15180.0|  4.005E7|  1.761E8| 7.747E8|8.819E11|7.499E13|0.007511| 5777.0|TRDXLVJ128F92C7C19|          Electronic|            1|[0.004715,3356.0,...|[0.09931359473012...|[0.52480801152253...|       0.0|
#  |0.006288|6709.0|  9230.0|  1.605E8|  2.236E8| 3.108E8|7.075E12|1.909E13| 0.02309|11580.0|TRGNWHU128F933E924|          Electronic|            1|[0.006288,6709.0,...|[-0.0842968597317...|[0.47893825558397...|       1.0|
#  | 0.01147|3353.0| 15030.0|  4.003E7|  1.773E8| 7.842E8|8.814E11|7.572E13| 0.02517| 5780.0|TRAHSSO128EF347345|            Pop_Rock|            0|[0.01147,3353.0,1...|[0.10029670224877...|[0.52505317736194...|       0.0|
#  | 0.01601|6719.0| 22400.0|   1.61E8|  5.382E8| 1.799E9|7.109E12|2.665E14| 0.03008|11600.0|TRWBPAJ128F92FEB35|          Electronic|            1|[0.01601,6719.0,2...|[-0.1238495168105...|[0.46907713708004...|       1.0|
#  +--------+------+--------+---------+---------+--------+--------+--------+--------+-------+------------------+--------------------+-------------+--------------------+--------------------+--------------------+----------+
#  only showing top 5 rows




 -----------------------------------------------------------------------------------------------

 ###2. NaiveBayes

from pyspark.ml.classification import NaiveBayes
nb = NaiveBayes(smoothing=1,featuresCol="features", labelCol='is_electronic')
model = nb.fit(traing)
pred2 = model.transform(test)

pred2.show(5,)

#   +--------+------+--------+--------+---------+--------+--------+--------+--------+-------+------------------+-------------+-------------+--------------------+--------------------+--------------------+----------+
#   |      D1|    D2|      D3|      D4|       D5|      D6|      D7|     D10|      A1|     A2|      MSD_TRACKID1|    GenreType|is_electronic|            features|       rawPrediction|         probability|prediction|
#   +--------+------+--------+--------+---------+--------+--------+--------+--------+-------+------------------+-------------+-------------+--------------------+--------------------+--------------------+----------+
#   |1.261E-4|3351.0| 58100.0| 3.903E7|  6.797E8|1.183E10|8.452E11|4.467E15|7.093E-4| 5626.0|TRJNDIV128F426F03B|   Electronic|            1|[1.261E-4,3351.0,...|[-2.0582599338088...|           [0.0,1.0]|       1.0|
#   |0.004715|3356.0| 15180.0| 4.005E7|  1.761E8| 7.747E8|8.819E11|7.499E13|0.007511| 5777.0|TRDXLVJ128F92C7C19|   Electronic|            1|[0.004715,3356.0,...|[-5.2650314215971...|           [1.0,0.0]|       0.0|
#   |0.006288|6709.0|  9230.0| 1.605E8|  2.236E8| 3.108E8|7.075E12|1.909E13| 0.02309|11580.0|TRGNWHU128F933E924|   Electronic|            1|[0.006288,6709.0,...|[-4.0102773627650...|           [1.0,0.0]|       0.0|
#   | 0.01147|3353.0| 15030.0| 4.003E7|  1.773E8| 7.842E8|8.814E11|7.572E13| 0.02517| 5780.0|TRAHSSO128EF347345|     Pop_Rock|            0|[0.01147,3353.0,1...|[-5.2648982700770...|           [1.0,0.0]|       0.0|
#   | 0.01601|6719.0| 22400.0|  1.61E8|  5.382E8| 1.799E9|7.109E12|2.665E14| 0.03008|11600.0|TRWBPAJ128F92FEB35|   Electronic|            1|[0.01601,6719.0,2...|[-4.1185104154602...|           [1.0,0.0]|       0.0|
#   +--------+------+--------+--------+---------+--------+--------+--------+--------+-------+------------------+-------------+-------------+--------------------+--------------------+--------------------+----------+
#   only showing top 5 rows




---------------------------------------------------------------------------------------------------
###3. Random Forest

from pyspark.ml.classification import RandomForestClassifier
rf = RandomForestClassifier(labelCol="is_electronic",
                             featuresCol="features",
                             numTrees = 100,
                             maxDepth = 4,
                            maxBins = 32)

rfModel = rf.fit(traing)
pred3 = rfModel.transform(test)

pred3.show(5,)


#   +--------+------+--------+--------+---------+--------+--------+--------+--------+-------+------------------+-------------+-------------+--------------------+--------------------+--------------------+----------+
#   |      D1|    D2|      D3|      D4|       D5|      D6|      D7|     D10|      A1|     A2|      MSD_TRACKID1|    GenreType|is_electronic|            features|       rawPrediction|         probability|prediction|
#   +--------+------+--------+--------+---------+--------+--------+--------+--------+-------+------------------+-------------+-------------+--------------------+--------------------+--------------------+----------+
#   |1.261E-4|3351.0| 58100.0| 3.903E7|  6.797E8|1.183E10|8.452E11|4.467E15|7.093E-4| 5626.0|TRJNDIV128F426F03B|   Electronic|            1|[1.261E-4,3351.0,...|[59.7612288425979...|[0.59761228842597...|       0.0|
#   |0.004715|3356.0| 15180.0| 4.005E7|  1.761E8| 7.747E8|8.819E11|7.499E13|0.007511| 5777.0|TRDXLVJ128F92C7C19|   Electronic|            1|[0.004715,3356.0,...|[54.8797417851305...|[0.54879741785130...|       0.0|
#   |0.006288|6709.0|  9230.0| 1.605E8|  2.236E8| 3.108E8|7.075E12|1.909E13| 0.02309|11580.0|TRGNWHU128F933E924|   Electronic|            1|[0.006288,6709.0,...|[30.9327340202532...|[0.30932734020253...|       1.0|
#   | 0.01147|3353.0| 15030.0| 4.003E7|  1.773E8| 7.842E8|8.814E11|7.572E13| 0.02517| 5780.0|TRAHSSO128EF347345|     Pop_Rock|            0|[0.01147,3353.0,1...|[56.9563682986267...|[0.56956368298626...|       0.0|
#   | 0.01601|6719.0| 22400.0|  1.61E8|  5.382E8| 1.799E9|7.109E12|2.665E14| 0.03008|11600.0|TRWBPAJ128F92FEB35|   Electronic|            1|[0.01601,6719.0,2...|[49.7866230085641...|[0.49786623008564...|       1.0|
#   +--------+------+--------+--------+---------+--------+--------+--------+--------+-------+------------------+-------------+-------------+--------------------+--------------------+--------------------+----------+
#   only showing top 5 rows
